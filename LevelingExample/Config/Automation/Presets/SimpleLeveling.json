{
	"id": "SimpleLeveling",
	"name": "SimpleLeveling",
	"enabledTests": [
		"SimpleLeveling.SimpleLevelingSubsystem.AddXP.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingSubsystem.AddXP.When leveling track is null.Should return the default value ",
		"SimpleLeveling.SimpleLevelingSubsystem.GetLevel.When Leveling Track does not exist.Should return 0",
		"SimpleLeveling.SimpleLevelingSubsystem.GetLevel.When Leveling Track exists.Should return the specified leveling track",
		"SimpleLeveling.SimpleLevelingSubsystem.GetLevelingTrack.When Leveling Track does not exist.Should return nullptr",
		"SimpleLeveling.SimpleLevelingSubsystem.GetLevelingTrack.When Leveling Track exists.Should return the specified leveling track",
		"SimpleLeveling.SimpleLevelingSubsystem.GetLevelingTracks.Should return all registered leveling tracks",
		"SimpleLeveling.SimpleLevelingSubsystem.GetRemainingXPRequiredForNextLevel.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingSubsystem.GetRemainingXPRequiredForNextLevel.When leveling track is null.Should return the default value ",
		"SimpleLeveling.SimpleLevelingSubsystem.GetStorage.Should convert all leveling tracks to storage data",
		"SimpleLeveling.SimpleLevelingSubsystem.GetTotalXPRequiredForNextLevel.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingSubsystem.GetTotalXPRequiredForNextLevel.When leveling track is null.Should return the default value ",
		"SimpleLeveling.SimpleLevelingSubsystem.GetXP.When Leveling Track does not exist.Should return 0",
		"SimpleLeveling.SimpleLevelingSubsystem.GetXP.When Leveling Track exists.Should return the specified leveling track",
		"SimpleLeveling.SimpleLevelingSubsystem.GetXPPercentage.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingSubsystem.GetXPPercentage.When leveling track is null.Should return the default value ",
		"SimpleLeveling.SimpleLevelingSubsystem.InflateFromStorage.Should convert all storage data to leveling tracks",
		"SimpleLeveling.SimpleLevelingSubsystem.RegisterSubsystemDefinition.When Definition asset fails validation.Should not register any definitions",
		"SimpleLeveling.SimpleLevelingSubsystem.RegisterSubsystemDefinition.When Definition asset is null.Should not register any definitions",
		"SimpleLeveling.SimpleLevelingSubsystem.RegisterSubsystemDefinition.When Definitions are all valid.Should convert all storage data to leveling tracks",
		"SimpleLeveling.SimpleLevelingSubsystem.ResetLevelingTrack.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingSubsystem.ResetLevelingTrack.When leveling track is null.Should return the default value ",
		"SimpleLeveling.SimpleLevelingSubsystem.ResetXP.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingSubsystem.ResetXP.When leveling track is null.Should return the default value ",
		"SimpleLeveling.SimpleLevelingSubsystem.SetLevel.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingSubsystem.SetLevel.When leveling track is null.Should return the default value ",
		"SimpleLeveling.SimpleLevelingSubsystem.SetXP.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingSubsystem.SetXP.When leveling track is null.Should return the default value ",
		"SimpleLeveling.SimpleLevelingTrack.AddXP.When InXPAmount is negative.When CurrentXP is greater than negative amount.Should decrement the CurrentXP value",
		"SimpleLeveling.SimpleLevelingTrack.AddXP.When InXPAmount is negative.When CurrentXP is less than negative amount.Should set CurrentXP to zero",
		"SimpleLeveling.SimpleLevelingTrack.AddXP.When InXPAmount is positive.When CurrentLevel is below MaxLevel.When the XP value is not enough to level up.Should update CurrentXP based on the passed in value",
		"SimpleLeveling.SimpleLevelingTrack.AddXP.When InXPAmount is positive.When CurrentLevel is below MaxLevel.When XP is enough to level up.When XP Overflow Policy is CarryOver.Should add XP difference to new levels CurrentXP",
		"SimpleLeveling.SimpleLevelingTrack.AddXP.When InXPAmount is positive.When CurrentLevel is below MaxLevel.When XP is enough to level up.When XP Overflow Policy is Discard.Should set CurrentXP to zero",
		"SimpleLeveling.SimpleLevelingTrack.AddXP.When InXPAmount is positive.When CurrentLevel is below MaxLevel.When XP is enough to level up multiple times.Should update CurrentXP and CurrentLevel",
		"SimpleLeveling.SimpleLevelingTrack.AddXP.When InXPAmount is positive.When CurrentLevel is below MaxLevel.When XP is enough to reach MaxLevel.Should set CurrentXP to zero",
		"SimpleLeveling.SimpleLevelingTrack.AddXP.When InXPAmount is positive.When CurrentLevel is MaxLevel.Should do nothing",
		"SimpleLeveling.SimpleLevelingTrack.GetRemainingXPRequiredForNextLevel.When CurrentLevel is MaxLevel.Should return zero.",
		"SimpleLeveling.SimpleLevelingTrack.GetRemainingXPRequiredForNextLevel.When Min and Max Level are equal.Should return zero.",
		"SimpleLeveling.SimpleLevelingTrack.GetRemainingXPRequiredForNextLevel.When required XP is not using a Curve.Should get the total amount of XP required to reach to next level.",
		"SimpleLeveling.SimpleLevelingTrack.GetRemainingXPRequiredForNextLevel.When required XP is using a Curve.Should get the relative amount of XP required to reach to next level.",
		"SimpleLeveling.SimpleLevelingTrack.GetStorage.When ReachedMaxLevel has been broadcast.Should return leveling tracks as storage data",
		"SimpleLeveling.SimpleLevelingTrack.GetStorage.Should return leveling tracks as storage data",
		"SimpleLeveling.SimpleLevelingTrack.GetTotalXPRequiredForNextLevel.When CurrentLevel is MaxLevel.Should return zero.",
		"SimpleLeveling.SimpleLevelingTrack.GetTotalXPRequiredForNextLevel.When Min and Max Level are equal.Should return zero.",
		"SimpleLeveling.SimpleLevelingTrack.GetTotalXPRequiredForNextLevel.When required XP is not using a Curve.Should get the total amount of XP required to reach to next level.",
		"SimpleLeveling.SimpleLevelingTrack.GetTotalXPRequiredForNextLevel.When required XP is using a Curve.Should get the total amount of XP required to reach to next level.",
		"SimpleLeveling.SimpleLevelingTrack.GetXPPercentage.When CurrentLevel is below MaxLevel.Should get current xp relative to the total required as a percentage",
		"SimpleLeveling.SimpleLevelingTrack.GetXPPercentage.When CurrentLevel is MaxLevel.Should return zero.",
		"SimpleLeveling.SimpleLevelingTrack.InflateFromDefinition.Should set all properties from definition data",
		"SimpleLeveling.SimpleLevelingTrack.InflateFromStorage.Should set all properties from storage data",
		"SimpleLeveling.SimpleLevelingTrack.ResetLevelingTrack.When DefaultLevel matches MaxLevel.Should set CurrentLevel, Reset CurrentXP, and Broadcast Changes",
		"SimpleLeveling.SimpleLevelingTrack.ResetLevelingTrack.Should set CurrentXP to zero and CurrentLevel to DefaultLevel",
		"SimpleLeveling.SimpleLevelingTrack.ResetXP.When CurrentLevel is below MaxLevel.Should set CurrentXP to zero",
		"SimpleLeveling.SimpleLevelingTrack.ResetXP.When CurrentLevel is MaxLevel.Should do nothing",
		"SimpleLeveling.SimpleLevelingTrack.SetLevel.When passed in value is MaxLevel.Should set CurrentLevel, Reset CurrentXP, and Broadcast Changes",
		"SimpleLeveling.SimpleLevelingTrack.SetLevel.Should set CurrentLevel to the passed in value, clamped by the Min and Max level configuration",
		"SimpleLeveling.SimpleLevelingTrack.SetXP.When CurrentLevel is below MaxLevel.When the XP value is not enough to level up.Should set CurrentXP to the passed in value",
		"SimpleLeveling.SimpleLevelingTrack.SetXP.When CurrentLevel is below MaxLevel.When XP is enough to level up.When XP Overflow Policy is CarryOver.Should add XP difference to new levels CurrentXP",
		"SimpleLeveling.SimpleLevelingTrack.SetXP.When CurrentLevel is below MaxLevel.When XP is enough to level up.When XP Overflow Policy is Discard.Should set CurrentXP to zero",
		"SimpleLeveling.SimpleLevelingTrack.SetXP.When CurrentLevel is below MaxLevel.When XP is enough to level up multiple times.Should update CurrentXP",
		"SimpleLeveling.SimpleLevelingTrack.SetXP.When CurrentLevel is below MaxLevel.When XP is enough to reach MaxLevel.Should set CurrentXP to zero",
		"SimpleLeveling.SimpleLevelingTrack.SetXP.When CurrentLevel is below MaxLevel.When XP value is negative.Should do nothing",
		"SimpleLeveling.SimpleLevelingTrack.SetXP.When CurrentLevel is MaxLevel.Should do nothing",
		"SimpleLeveling.SimpleLevelingTrackComponent.AddXP.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingTrackComponent.AddXP.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetLevel.When Leveling Track does not exist.Should return 0",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetLevel.When Leveling Track exists.Should return the specified leveling track",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetLevelingTrack.When Leveling Track does not exist.Should return nullptr",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetLevelingTrack.When Leveling Track exists.Should return the specified leveling track",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetRemainingXPRequiredForNextLevel.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetRemainingXPRequiredForNextLevel.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetStorage.When leveling track exists.Should convert leveling track to storage data",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetStorage.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetTotalXPRequiredForNextLevel.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetTotalXPRequiredForNextLevel.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetXP.When Leveling Track does not exist.Should return 0",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetXP.When Leveling Track exists.Should return the specified leveling track",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetXPPercentage.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingTrackComponent.GetXPPercentage.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackComponent.InflateFromStorage.When leveling track exists.Should overwrite leveling track data with storage data",
		"SimpleLeveling.SimpleLevelingTrackComponent.InflateFromStorage.When leveling track is null.Should create a new leveling track object",
		"SimpleLeveling.SimpleLevelingTrackComponent.ResetLevelingTrack.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingTrackComponent.ResetLevelingTrack.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackComponent.ResetXP.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingTrackComponent.ResetXP.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackComponent.SetLevel.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingTrackComponent.SetLevel.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackComponent.SetXP.When leveling track exists.Should return the leveling track value",
		"SimpleLeveling.SimpleLevelingTrackComponent.SetXP.When leveling track is null.Should return the default value",
		"SimpleLeveling.SimpleLevelingTrackPerformance.Should level up properly when given an extreme amount of XP"
	]
}